[
    {
        "id": "92ecd57e6257a18f",
        "type": "subflow",
        "name": "Subflow 9",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "8fd645c016bbf279",
        "type": "function",
        "z": "92ecd57e6257a18f",
        "name": "Voltage",
        "func": "var nodeName = \"Node9\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 160,
        "wires": [
            [
                "5ad4d5c2488de03b"
            ]
        ]
    },
    {
        "id": "c6d186c3f33516c0",
        "type": "function",
        "z": "92ecd57e6257a18f",
        "name": "",
        "func": "var nodeName = \"Node9\";\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 240,
        "wires": [
            [
                "d964e040b684ec11"
            ]
        ]
    },
    {
        "id": "caa3a191b611bd2d",
        "type": "inject",
        "z": "92ecd57e6257a18f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "c6d186c3f33516c0",
                "8956f54ae6050e4d"
            ]
        ]
    },
    {
        "id": "d964e040b684ec11",
        "type": "ui_text",
        "z": "92ecd57e6257a18f",
        "group": "47835efed891c188",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "8956f54ae6050e4d",
        "type": "function",
        "z": "92ecd57e6257a18f",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node9\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 280,
        "wires": [
            [
                "10faf9282187b996"
            ]
        ]
    },
    {
        "id": "c63ec5c2e7d1c997",
        "type": "json",
        "z": "92ecd57e6257a18f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "8fd645c016bbf279",
                "c6d186c3f33516c0",
                "8956f54ae6050e4d"
            ]
        ]
    },
    {
        "id": "5ad4d5c2488de03b",
        "type": "range",
        "z": "92ecd57e6257a18f",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "0f19bf9c1c385f7b"
            ]
        ]
    },
    {
        "id": "10faf9282187b996",
        "type": "ui_led",
        "z": "92ecd57e6257a18f",
        "order": 1,
        "group": "47835efed891c188",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 550,
        "y": 280,
        "wires": []
    },
    {
        "id": "0f19bf9c1c385f7b",
        "type": "ui_artlessgauge",
        "z": "92ecd57e6257a18f",
        "group": "47835efed891c188",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 700,
        "y": 200,
        "wires": []
    },
    {
        "id": "d77ce6733717fd3e",
        "type": "inject",
        "z": "92ecd57e6257a18f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node9\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "c63ec5c2e7d1c997"
            ]
        ]
    },
    {
        "id": "47835efed891c188",
        "type": "ui_group",
        "name": "Node 9",
        "tab": "7dfc3c702e35fbbc",
        "order": 10,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9f10e235415e4162",
        "type": "subflow",
        "name": "Subflow 10",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "aaa4bf826fbe5f41",
        "type": "function",
        "z": "9f10e235415e4162",
        "name": "Voltage",
        "func": "var nodeName = \"Node10\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 140,
        "wires": [
            [
                "cf879a40db7d5542"
            ]
        ]
    },
    {
        "id": "c250e075ec6299fc",
        "type": "function",
        "z": "9f10e235415e4162",
        "name": "",
        "func": "var nodeName = \"Node10\";\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 220,
        "wires": [
            [
                "7569ceef34965bc1"
            ]
        ]
    },
    {
        "id": "8e8c21f965bc3568",
        "type": "inject",
        "z": "9f10e235415e4162",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 320,
        "y": 240,
        "wires": [
            [
                "c250e075ec6299fc",
                "7878ef47cb86a9b6"
            ]
        ]
    },
    {
        "id": "7569ceef34965bc1",
        "type": "ui_text",
        "z": "9f10e235415e4162",
        "group": "2c8e7e39c820254f",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 690,
        "y": 220,
        "wires": []
    },
    {
        "id": "7878ef47cb86a9b6",
        "type": "function",
        "z": "9f10e235415e4162",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node10\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 260,
        "wires": [
            [
                "97906ecd4ac98e68"
            ]
        ]
    },
    {
        "id": "2c1caa496a9f8995",
        "type": "json",
        "z": "9f10e235415e4162",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 140,
        "wires": [
            [
                "aaa4bf826fbe5f41",
                "c250e075ec6299fc",
                "7878ef47cb86a9b6"
            ]
        ]
    },
    {
        "id": "cf879a40db7d5542",
        "type": "range",
        "z": "9f10e235415e4162",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 680,
        "y": 180,
        "wires": [
            [
                "ddc2f4080991d09c"
            ]
        ]
    },
    {
        "id": "97906ecd4ac98e68",
        "type": "ui_led",
        "z": "9f10e235415e4162",
        "order": 1,
        "group": "2c8e7e39c820254f",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "ddc2f4080991d09c",
        "type": "ui_artlessgauge",
        "z": "9f10e235415e4162",
        "group": "2c8e7e39c820254f",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 820,
        "y": 180,
        "wires": []
    },
    {
        "id": "b1ba38299a9b25a7",
        "type": "inject",
        "z": "9f10e235415e4162",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node10\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "2c1caa496a9f8995"
            ]
        ]
    },
    {
        "id": "2c8e7e39c820254f",
        "type": "ui_group",
        "name": "Node 10",
        "tab": "7dfc3c702e35fbbc",
        "order": 11,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "de572c5bbb22ac12",
        "type": "subflow",
        "name": "Subflow 8",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "b1ab6518f511b9d8",
        "type": "function",
        "z": "de572c5bbb22ac12",
        "name": "Voltage",
        "func": "var nodeName = \"Node8\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 180,
        "wires": [
            [
                "ef74acf705e62019"
            ]
        ]
    },
    {
        "id": "eeed20bb75618270",
        "type": "function",
        "z": "de572c5bbb22ac12",
        "name": "",
        "func": "var nodeName = \"Node8\";\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 260,
        "wires": [
            [
                "d34d5315b9f0d3e4"
            ]
        ]
    },
    {
        "id": "a94361914e612a0f",
        "type": "inject",
        "z": "de572c5bbb22ac12",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 280,
        "y": 280,
        "wires": [
            [
                "eeed20bb75618270",
                "8bfd975c9cc3cad5"
            ]
        ]
    },
    {
        "id": "d34d5315b9f0d3e4",
        "type": "ui_text",
        "z": "de572c5bbb22ac12",
        "group": "d29523623d9184cf",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 650,
        "y": 260,
        "wires": []
    },
    {
        "id": "8bfd975c9cc3cad5",
        "type": "function",
        "z": "de572c5bbb22ac12",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node8\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 300,
        "wires": [
            [
                "903868e058318284"
            ]
        ]
    },
    {
        "id": "0fce8493f39252d2",
        "type": "json",
        "z": "de572c5bbb22ac12",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 180,
        "wires": [
            [
                "b1ab6518f511b9d8",
                "eeed20bb75618270",
                "8bfd975c9cc3cad5"
            ]
        ]
    },
    {
        "id": "ef74acf705e62019",
        "type": "range",
        "z": "de572c5bbb22ac12",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 640,
        "y": 220,
        "wires": [
            [
                "71a8ff779e3da148"
            ]
        ]
    },
    {
        "id": "903868e058318284",
        "type": "ui_led",
        "z": "de572c5bbb22ac12",
        "order": 1,
        "group": "d29523623d9184cf",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 630,
        "y": 300,
        "wires": []
    },
    {
        "id": "71a8ff779e3da148",
        "type": "ui_artlessgauge",
        "z": "de572c5bbb22ac12",
        "group": "d29523623d9184cf",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 780,
        "y": 220,
        "wires": []
    },
    {
        "id": "86ae90b041e2b73b",
        "type": "inject",
        "z": "de572c5bbb22ac12",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node8\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 270,
        "y": 180,
        "wires": [
            [
                "0fce8493f39252d2"
            ]
        ]
    },
    {
        "id": "d29523623d9184cf",
        "type": "ui_group",
        "name": "Node 8",
        "tab": "7dfc3c702e35fbbc",
        "order": 9,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e8533a8d7456ba12",
        "type": "subflow",
        "name": "Subflow 7",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "fb2462c7a2fdd07b",
        "type": "function",
        "z": "e8533a8d7456ba12",
        "name": "Voltage",
        "func": "var nodeName = \"Node7\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 160,
        "wires": [
            [
                "9ba62ab253031ed1"
            ]
        ]
    },
    {
        "id": "5e19c3978aaae897",
        "type": "function",
        "z": "e8533a8d7456ba12",
        "name": "",
        "func": "var nodeName = \"Node7\";\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 240,
        "wires": [
            [
                "8a429ce319a18ee0"
            ]
        ]
    },
    {
        "id": "b4ec1912ca1cebc4",
        "type": "inject",
        "z": "e8533a8d7456ba12",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 280,
        "y": 260,
        "wires": [
            [
                "5e19c3978aaae897",
                "5c2538f39e67557c"
            ]
        ]
    },
    {
        "id": "8a429ce319a18ee0",
        "type": "ui_text",
        "z": "e8533a8d7456ba12",
        "group": "79fc8a977e96455c",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "5c2538f39e67557c",
        "type": "function",
        "z": "e8533a8d7456ba12",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node7\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "e2ac7e5f5207458c"
            ]
        ]
    },
    {
        "id": "89eb0d73796aab1f",
        "type": "json",
        "z": "e8533a8d7456ba12",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "fb2462c7a2fdd07b",
                "5e19c3978aaae897",
                "5c2538f39e67557c"
            ]
        ]
    },
    {
        "id": "9ba62ab253031ed1",
        "type": "range",
        "z": "e8533a8d7456ba12",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 640,
        "y": 200,
        "wires": [
            [
                "6546c18111ea42fa"
            ]
        ]
    },
    {
        "id": "e2ac7e5f5207458c",
        "type": "ui_led",
        "z": "e8533a8d7456ba12",
        "order": 1,
        "group": "79fc8a977e96455c",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 630,
        "y": 280,
        "wires": []
    },
    {
        "id": "6546c18111ea42fa",
        "type": "ui_artlessgauge",
        "z": "e8533a8d7456ba12",
        "group": "79fc8a977e96455c",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 780,
        "y": 200,
        "wires": []
    },
    {
        "id": "60ece043400b05be",
        "type": "inject",
        "z": "e8533a8d7456ba12",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node7\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 270,
        "y": 160,
        "wires": [
            [
                "89eb0d73796aab1f"
            ]
        ]
    },
    {
        "id": "79fc8a977e96455c",
        "type": "ui_group",
        "name": "Node 7",
        "tab": "7dfc3c702e35fbbc",
        "order": 8,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1daf2959585bda76",
        "type": "subflow",
        "name": "Subflow 6",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "80596380f401464c",
        "type": "function",
        "z": "1daf2959585bda76",
        "name": "Voltage",
        "func": "var nodeName = \"Node6\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 160,
        "wires": [
            [
                "c75bf48a15ef87e9"
            ]
        ]
    },
    {
        "id": "8b2a2c3564f54fcf",
        "type": "function",
        "z": "1daf2959585bda76",
        "name": "",
        "func": "var nodeName = \"Node6\";\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 240,
        "wires": [
            [
                "e0c4a9f65ec50b32"
            ]
        ]
    },
    {
        "id": "ec2e45586755cbea",
        "type": "inject",
        "z": "1daf2959585bda76",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 300,
        "y": 260,
        "wires": [
            [
                "8b2a2c3564f54fcf",
                "866302b4f44c3093"
            ]
        ]
    },
    {
        "id": "e0c4a9f65ec50b32",
        "type": "ui_text",
        "z": "1daf2959585bda76",
        "group": "c3a8697cce6aa337",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 670,
        "y": 240,
        "wires": []
    },
    {
        "id": "866302b4f44c3093",
        "type": "function",
        "z": "1daf2959585bda76",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node6\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            [
                "f4685471ef5acf30"
            ]
        ]
    },
    {
        "id": "13e3a8a2bffe2322",
        "type": "json",
        "z": "1daf2959585bda76",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "80596380f401464c",
                "8b2a2c3564f54fcf",
                "866302b4f44c3093"
            ]
        ]
    },
    {
        "id": "c75bf48a15ef87e9",
        "type": "range",
        "z": "1daf2959585bda76",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "690d51235873bdb2"
            ]
        ]
    },
    {
        "id": "f4685471ef5acf30",
        "type": "ui_led",
        "z": "1daf2959585bda76",
        "order": 1,
        "group": "c3a8697cce6aa337",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 280,
        "wires": []
    },
    {
        "id": "690d51235873bdb2",
        "type": "ui_artlessgauge",
        "z": "1daf2959585bda76",
        "group": "c3a8697cce6aa337",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 800,
        "y": 200,
        "wires": []
    },
    {
        "id": "df2dae5fcc00ee84",
        "type": "inject",
        "z": "1daf2959585bda76",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node6\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "13e3a8a2bffe2322"
            ]
        ]
    },
    {
        "id": "c3a8697cce6aa337",
        "type": "ui_group",
        "name": "Node 6",
        "tab": "7dfc3c702e35fbbc",
        "order": 7,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "cf3b2373529d6dcb",
        "type": "subflow",
        "name": "Subflow 5",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "648dd541baba476c",
        "type": "function",
        "z": "cf3b2373529d6dcb",
        "name": "Voltage",
        "func": "var nodeName = \"Node5\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 120,
        "wires": [
            [
                "efaaf9765cf0a8f4"
            ]
        ]
    },
    {
        "id": "0a84deca72f3982c",
        "type": "function",
        "z": "cf3b2373529d6dcb",
        "name": "",
        "func": "var nodeName = \"Node5\";\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            [
                "1917c49cc046545f"
            ]
        ]
    },
    {
        "id": "a0c44f3ca3f8184f",
        "type": "inject",
        "z": "cf3b2373529d6dcb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "0a84deca72f3982c",
                "f974c00feaad5759"
            ]
        ]
    },
    {
        "id": "1917c49cc046545f",
        "type": "ui_text",
        "z": "cf3b2373529d6dcb",
        "group": "c1f4cc53fd58dd28",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "f974c00feaad5759",
        "type": "function",
        "z": "cf3b2373529d6dcb",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node5\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 240,
        "wires": [
            [
                "5a673bd478190e40"
            ]
        ]
    },
    {
        "id": "78185576e553d7c2",
        "type": "json",
        "z": "cf3b2373529d6dcb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 120,
        "wires": [
            [
                "648dd541baba476c",
                "0a84deca72f3982c",
                "f974c00feaad5759"
            ]
        ]
    },
    {
        "id": "efaaf9765cf0a8f4",
        "type": "range",
        "z": "cf3b2373529d6dcb",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 660,
        "y": 160,
        "wires": [
            [
                "6cdbfb9598405904"
            ]
        ]
    },
    {
        "id": "5a673bd478190e40",
        "type": "ui_led",
        "z": "cf3b2373529d6dcb",
        "order": 1,
        "group": "c1f4cc53fd58dd28",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "6cdbfb9598405904",
        "type": "ui_artlessgauge",
        "z": "cf3b2373529d6dcb",
        "group": "c1f4cc53fd58dd28",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 800,
        "y": 160,
        "wires": []
    },
    {
        "id": "eede65db1dc1f3bb",
        "type": "inject",
        "z": "cf3b2373529d6dcb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node5\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "78185576e553d7c2"
            ]
        ]
    },
    {
        "id": "c1f4cc53fd58dd28",
        "type": "ui_group",
        "name": "Node 5",
        "tab": "7dfc3c702e35fbbc",
        "order": 6,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d4d66e4cfdfd3b8c",
        "type": "subflow",
        "name": "Subflow 2",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "4e5644d2ed4fc30a",
        "type": "function",
        "z": "d4d66e4cfdfd3b8c",
        "name": "Voltage",
        "func": "var nodeName = \"Node2\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 140,
        "wires": [
            [
                "4a6273d4c6e7a251"
            ]
        ]
    },
    {
        "id": "efb25f61ee67c8f4",
        "type": "function",
        "z": "d4d66e4cfdfd3b8c",
        "name": "",
        "func": "var nodeName = \"Node2\";\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "b94e1a72c4e579c6"
            ]
        ]
    },
    {
        "id": "68e71087a99cbb15",
        "type": "inject",
        "z": "d4d66e4cfdfd3b8c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 280,
        "y": 260,
        "wires": [
            [
                "efb25f61ee67c8f4",
                "c493f35388e0b295"
            ]
        ]
    },
    {
        "id": "b94e1a72c4e579c6",
        "type": "ui_text",
        "z": "d4d66e4cfdfd3b8c",
        "group": "415553c6fb85601c",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 710,
        "y": 260,
        "wires": []
    },
    {
        "id": "c493f35388e0b295",
        "type": "function",
        "z": "d4d66e4cfdfd3b8c",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node2\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 400,
        "wires": [
            [
                "2b054768893b7d13"
            ]
        ]
    },
    {
        "id": "5519878ee8c221b6",
        "type": "json",
        "z": "d4d66e4cfdfd3b8c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "4e5644d2ed4fc30a",
                "efb25f61ee67c8f4",
                "c493f35388e0b295"
            ]
        ]
    },
    {
        "id": "4a6273d4c6e7a251",
        "type": "range",
        "z": "d4d66e4cfdfd3b8c",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 620,
        "y": 100,
        "wires": [
            [
                "9c61ecb101bae01a"
            ]
        ]
    },
    {
        "id": "2b054768893b7d13",
        "type": "ui_led",
        "z": "d4d66e4cfdfd3b8c",
        "order": 1,
        "group": "415553c6fb85601c",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 690,
        "y": 400,
        "wires": []
    },
    {
        "id": "9c61ecb101bae01a",
        "type": "ui_artlessgauge",
        "z": "d4d66e4cfdfd3b8c",
        "group": "415553c6fb85601c",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 800,
        "y": 100,
        "wires": []
    },
    {
        "id": "ada7e7eafe0a6f64",
        "type": "inject",
        "z": "d4d66e4cfdfd3b8c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node2\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "5519878ee8c221b6"
            ]
        ]
    },
    {
        "id": "415553c6fb85601c",
        "type": "ui_group",
        "z": "d4d66e4cfdfd3b8c",
        "name": "Node2",
        "tab": "7dfc3c702e35fbbc",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5e304daf39eec074",
        "type": "subflow",
        "name": "Subflow 4",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "e83eea3111881375",
        "type": "function",
        "z": "5e304daf39eec074",
        "name": "Voltage",
        "func": "var nodeName = \"Node4\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 140,
        "wires": [
            [
                "1f9b06b75e3c9091"
            ]
        ]
    },
    {
        "id": "9b939f251031209a",
        "type": "function",
        "z": "5e304daf39eec074",
        "name": "",
        "func": "var nodeName = \"Node4\";\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 220,
        "wires": [
            [
                "68855e67b05ae230"
            ]
        ]
    },
    {
        "id": "deeabdf1028edddd",
        "type": "inject",
        "z": "5e304daf39eec074",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 280,
        "y": 240,
        "wires": [
            [
                "9b939f251031209a",
                "34c4617350fb8395"
            ]
        ]
    },
    {
        "id": "68855e67b05ae230",
        "type": "ui_text",
        "z": "5e304daf39eec074",
        "group": "4ad4a79eec4369ce",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "34c4617350fb8395",
        "type": "function",
        "z": "5e304daf39eec074",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node4\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 260,
        "wires": [
            [
                "75349270a30292c5"
            ]
        ]
    },
    {
        "id": "a30e69c51dbef72e",
        "type": "json",
        "z": "5e304daf39eec074",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "e83eea3111881375",
                "9b939f251031209a",
                "34c4617350fb8395"
            ]
        ]
    },
    {
        "id": "1f9b06b75e3c9091",
        "type": "range",
        "z": "5e304daf39eec074",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 640,
        "y": 180,
        "wires": [
            [
                "b83774009c951af5"
            ]
        ]
    },
    {
        "id": "75349270a30292c5",
        "type": "ui_led",
        "z": "5e304daf39eec074",
        "order": 1,
        "group": "4ad4a79eec4369ce",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "b83774009c951af5",
        "type": "ui_artlessgauge",
        "z": "5e304daf39eec074",
        "group": "4ad4a79eec4369ce",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 780,
        "y": 180,
        "wires": []
    },
    {
        "id": "ca93fc18d2e27908",
        "type": "inject",
        "z": "5e304daf39eec074",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node4\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 270,
        "y": 140,
        "wires": [
            [
                "a30e69c51dbef72e"
            ]
        ]
    },
    {
        "id": "4ad4a79eec4369ce",
        "type": "ui_group",
        "name": "Node 4",
        "tab": "7dfc3c702e35fbbc",
        "order": 5,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "24dc22ca0c92ec0a",
        "type": "subflow",
        "name": "Subflow 3",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "1a6e8d8680644cd3",
        "type": "function",
        "z": "24dc22ca0c92ec0a",
        "name": "Voltage",
        "func": "var nodeName = \"Node3\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 180,
        "wires": [
            [
                "fa96abeda98901f8"
            ]
        ]
    },
    {
        "id": "c4fdada16b18ab72",
        "type": "function",
        "z": "24dc22ca0c92ec0a",
        "name": "",
        "func": "var nodeName = \"Node3\";\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 260,
        "wires": [
            [
                "99b60298640abbee"
            ]
        ]
    },
    {
        "id": "c1d065cf8dc1af82",
        "type": "inject",
        "z": "24dc22ca0c92ec0a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "c4fdada16b18ab72",
                "dede518cead7cfe9"
            ]
        ]
    },
    {
        "id": "99b60298640abbee",
        "type": "ui_text",
        "z": "24dc22ca0c92ec0a",
        "group": "f826df36ab98b799",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "dede518cead7cfe9",
        "type": "function",
        "z": "24dc22ca0c92ec0a",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node3\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 300,
        "wires": [
            [
                "916c88903b109e33"
            ]
        ]
    },
    {
        "id": "323e6b60d9f0d8e1",
        "type": "json",
        "z": "24dc22ca0c92ec0a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "1a6e8d8680644cd3",
                "c4fdada16b18ab72",
                "dede518cead7cfe9"
            ]
        ]
    },
    {
        "id": "fa96abeda98901f8",
        "type": "range",
        "z": "24dc22ca0c92ec0a",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 660,
        "y": 220,
        "wires": [
            [
                "63325623185ab2fd"
            ]
        ]
    },
    {
        "id": "916c88903b109e33",
        "type": "ui_led",
        "z": "24dc22ca0c92ec0a",
        "order": 1,
        "group": "f826df36ab98b799",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 300,
        "wires": []
    },
    {
        "id": "63325623185ab2fd",
        "type": "ui_artlessgauge",
        "z": "24dc22ca0c92ec0a",
        "group": "f826df36ab98b799",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "31109a929b4e9ac2",
        "type": "inject",
        "z": "24dc22ca0c92ec0a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node3\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 290,
        "y": 180,
        "wires": [
            [
                "323e6b60d9f0d8e1"
            ]
        ]
    },
    {
        "id": "f826df36ab98b799",
        "type": "ui_group",
        "name": "Node 3",
        "tab": "7dfc3c702e35fbbc",
        "order": 4,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5f1ba7d06cd6b121",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 160,
                "wires": [
                    {
                        "id": "e5947c15eb9f0ac0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 160,
                "wires": [
                    {
                        "id": "7fa414396e732e79",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 240,
                "wires": [
                    {
                        "id": "2419a7a98d2bb761",
                        "port": 0
                    }
                ]
            },
            {
                "x": 620,
                "y": 380,
                "wires": [
                    {
                        "id": "49ed53560132716a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7fa414396e732e79",
        "type": "function",
        "z": "5f1ba7d06cd6b121",
        "name": "Voltage",
        "func": "var nodeName = \"Node6\"\n\nif (msg.payload.nodeName == nodeName){\n    if (msg.payload.Voltage > 12.3){\n        msg.topic = 12.2 + \"V\";\n    }\n    else{\n        msg.topic = msg.payload.Voltage + \"V\";\n    }\n    msg.payload = msg.payload.Voltage;\n    global.set(\"voltage\",msg.payload);\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "e6a73ba725880eb6"
            ]
        ]
    },
    {
        "id": "2419a7a98d2bb761",
        "type": "function",
        "z": "5f1ba7d06cd6b121",
        "name": "",
        "func": "var nodeName = \"Node6\"\nvar count_secs = context.get(\"count_secs\") || 0;\nvar count_mins = context.get(\"count_mins\") || 0;\nvar count_hours = context.get(\"count_hours\") || 0;\nvar count_days = context.get(\"count_days\") || 0;\n\nif (msg.payload == \"countup\"){\n    count_secs++\n    if(count_secs >= 60){\n        count_mins ++\n        if(count_mins >= 60){\n            count_hours++\n            count_mins = 0;\n            if (count_hours >=24){\n                count_days++\n                count_hours = 0;\n            }\n        }\n        count_secs = 0;\n    }\n}\nelse if (msg.payload.nodeName == nodeName){\n    count_secs = 0;\n    count_mins = 0;\n    count_hours = 0;\n    count_days = 0;\n}\ncontext.set(\"count_secs\",count_secs);\ncontext.set(\"count_mins\",count_mins);\ncontext.set(\"count_hours\",count_hours);\ncontext.set(\"count_days\",count_days);\n\nmsg.payload = count_days + \"D \"\nmsg.payload += count_hours + \"h \" + count_mins + \"m \"\nmsg.payload += count_secs + \"s\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 280,
        "wires": [
            [
                "5c28cab1527acd3b"
            ]
        ]
    },
    {
        "id": "fa9d6e9b35abc38f",
        "type": "inject",
        "z": "5f1ba7d06cd6b121",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "countup",
        "payloadType": "str",
        "x": 240,
        "y": 280,
        "wires": [
            [
                "2419a7a98d2bb761",
                "49ed53560132716a"
            ]
        ]
    },
    {
        "id": "5c28cab1527acd3b",
        "type": "ui_text",
        "z": "5f1ba7d06cd6b121",
        "group": "1017f83a38e21cc1",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Last Update",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 670,
        "y": 280,
        "wires": []
    },
    {
        "id": "49ed53560132716a",
        "type": "function",
        "z": "5f1ba7d06cd6b121",
        "name": "",
        "func": "var count = context.get(\"count\") || 0;\nvar status = context.get(\"status\") || false;\n\nif (msg.payload.nodeName == \"Node6\"){\n    status = true;\n    context.set(\"status\", status)\n    count = 0;\n    context.set(\"count\",count)\n}\nelse{\n    count++\n    context.set(\"count\",count)\n    if (count >= 10){\n        status = false;\n        context.set(\"status\", status)\n        count = 0;\n        context.set(\"count\",count)\n    }\n}\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 420,
        "wires": [
            [
                "746fd05356216a91"
            ]
        ]
    },
    {
        "id": "e5947c15eb9f0ac0",
        "type": "json",
        "z": "5f1ba7d06cd6b121",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "7fa414396e732e79",
                "2419a7a98d2bb761",
                "49ed53560132716a"
            ]
        ]
    },
    {
        "id": "e6a73ba725880eb6",
        "type": "range",
        "z": "5f1ba7d06cd6b121",
        "minin": "8.8",
        "maxin": "12.2",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 580,
        "y": 120,
        "wires": [
            [
                "6025e94788a8d367"
            ]
        ]
    },
    {
        "id": "746fd05356216a91",
        "type": "ui_led",
        "z": "5f1ba7d06cd6b121",
        "order": 1,
        "group": "1017f83a38e21cc1",
        "width": 3,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 420,
        "wires": []
    },
    {
        "id": "6025e94788a8d367",
        "type": "ui_artlessgauge",
        "z": "5f1ba7d06cd6b121",
        "group": "1017f83a38e21cc1",
        "order": 2,
        "width": 3,
        "height": 3,
        "name": "Voltage",
        "icon": "iconify-emojione-monotone:battery",
        "label": "Voltage",
        "unit": "%",
        "layout": "radial",
        "decimals": "0",
        "differential": false,
        "minmax": true,
        "colorTrack": "#6e6e6e",
        "style": "3,2",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "topic",
        "inline": true,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#f21c1c",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#d4df3a",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 55,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 80,
                "col": "#1b8335",
                "t": "sec",
                "dot": 0
            },
            {
                "val": 100,
                "col": "#1b8335",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "7",
        "bgcolorFromTheme": true,
        "diffCenter": "25",
        "x": 760,
        "y": 80,
        "wires": []
    },
    {
        "id": "562432bfaed21496",
        "type": "inject",
        "z": "5f1ba7d06cd6b121",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeName\":\"Node6\" , \"Voltage\": 12.6}",
        "payloadType": "str",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "e5947c15eb9f0ac0"
            ]
        ]
    },
    {
        "id": "1017f83a38e21cc1",
        "type": "ui_group",
        "name": "Node1",
        "tab": "7dfc3c702e35fbbc",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7dfc3c702e35fbbc",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7c125f5ff4831fc9",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "24025c0b8a940909",
        "type": "ui_time_scheduler",
        "z": "7c125f5ff4831fc9",
        "group": "8ed9768f2af8c1fd",
        "name": "",
        "startDay": 0,
        "refresh": 60,
        "devices": [
            "TacMesh Nodes"
        ],
        "singleOff": false,
        "onlySendChange": false,
        "customPayload": false,
        "eventMode": false,
        "eventOptions": [],
        "sendTopic": true,
        "lat": "",
        "lon": "",
        "customContextStore": "",
        "outputs": 2,
        "order": 3,
        "width": 6,
        "height": 4,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "8d2e2235b80ee013",
                "72813bd52b7a755c"
            ],
            []
        ]
    },
    {
        "id": "f8c221f4eb841d02",
        "type": "mqtt out",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "topic": "tacmesh/test",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4d298a557d0f7d05",
        "x": 670,
        "y": 300,
        "wires": []
    },
    {
        "id": "576d62f4f5f8c0f7",
        "type": "mqtt in",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "topic": "tacmesh/test",
        "qos": "2",
        "datatype": "auto",
        "broker": "4d298a557d0f7d05",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 440,
        "wires": [
            [
                "702d978d0a07e797"
            ]
        ]
    },
    {
        "id": "702d978d0a07e797",
        "type": "debug",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 440,
        "wires": []
    },
    {
        "id": "04a14408ee9b0bec",
        "type": "debug",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "8d2e2235b80ee013",
        "type": "function",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "func": "msg.payload = JSON.parse(msg.payload);\nvar timers = msg.payload.timers;\nvar len = timers.length;\nvar startArray = [];\nvar stopArray = [];\n\nfor (let i = 0; i < len; i++){\n    \n    startArray[i] = timers[i].starttime/1000;\n    stopArray[i] = timers[i].endtime/1000;\n}\nflow.set(\"startArrays\",startArray)\nflow.set(\"stopArrays\",stopArray)\nflow.set(\"arraySize\", len)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 160,
        "wires": [
            [
                "4939acb359e6e2dd",
                "60c365d4793c8046"
            ]
        ]
    },
    {
        "id": "ced1f437bfc0aca4",
        "type": "mqtt out",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "topic": "tacmesh/mode",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4d298a557d0f7d05",
        "x": 680,
        "y": 340,
        "wires": []
    },
    {
        "id": "c980566cfed4c6d0",
        "type": "ui_dropdown",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "label": "Mode",
        "tooltip": "Select the operation modes",
        "place": "Select option",
        "group": "8ed9768f2af8c1fd",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Operation",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Standby",
                "value": "2",
                "type": "str"
            },
            {
                "label": "Scheduled",
                "value": "3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 230,
        "y": 400,
        "wires": [
            [
                "5fcaa83006242101"
            ]
        ]
    },
    {
        "id": "afbc1fc30bc3292f",
        "type": "mqtt in",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "topic": "tacmesh/nodes",
        "qos": "2",
        "datatype": "auto",
        "broker": "4d298a557d0f7d05",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "794249b1b8f59c1b"
            ]
        ]
    },
    {
        "id": "98f72fd3a319ecbe",
        "type": "function",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "func": "msg.getStatus = \"\"\nif (msg.payload.payload == \"query\"){\n    msg.getStatus = \"any\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 200,
        "wires": [
            [
                "60c365d4793c8046",
                "04a14408ee9b0bec"
            ]
        ]
    },
    {
        "id": "794249b1b8f59c1b",
        "type": "json",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "98f72fd3a319ecbe"
            ]
        ]
    },
    {
        "id": "60c365d4793c8046",
        "type": "function",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "func": "var date = new Date();\nmypayload = {\n    \"payload\" : {\n        \"starttime\" : flow.get(\"startArrays\"),\n        \"stoptime\": flow.get(\"stopArrays\"),\n        \"arraysize\": flow.get(\"arraySize\"),\n        \"timestamp\" : Math.floor(date.getTime() / 1000),\n        \"sleepinterval\" : flow.get(\"sleepinterval\")\n    }\n}\nmymode = {\n    \"payload\": flow.get(\"mode\")\n}\nreturn [mypayload,mymode];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 300,
        "wires": [
            [
                "f8c221f4eb841d02",
                "5c2b30b9e8417529"
            ],
            [
                "ced1f437bfc0aca4"
            ]
        ]
    },
    {
        "id": "c99346ae4f2162a3",
        "type": "inject",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 300,
        "wires": [
            [
                "60c365d4793c8046"
            ]
        ]
    },
    {
        "id": "4939acb359e6e2dd",
        "type": "debug",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "72813bd52b7a755c",
        "type": "debug",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "5fcaa83006242101",
        "type": "function",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "func": "msg.payload = JSON.parse(msg.payload);\nflow.set(\"mode\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 400,
        "wires": [
            [
                "7d3a0ece27fc26b8",
                "60c365d4793c8046"
            ]
        ]
    },
    {
        "id": "7d3a0ece27fc26b8",
        "type": "debug",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 400,
        "wires": []
    },
    {
        "id": "6e813cdc1fb3f41d",
        "type": "function",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "func": "var date = new Date();\nmsg.payload = Math.floor(date.getTime() / 1000)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 500,
        "wires": [
            [
                "5c2b30b9e8417529"
            ]
        ]
    },
    {
        "id": "5c2b30b9e8417529",
        "type": "debug",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 500,
        "wires": []
    },
    {
        "id": "9a1ddad7a473b0c5",
        "type": "inject",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 500,
        "wires": [
            [
                "6e813cdc1fb3f41d"
            ]
        ]
    },
    {
        "id": "d4781606b0aaf61b",
        "type": "ui_template",
        "z": "7c125f5ff4831fc9",
        "group": "",
        "name": "Dashboard Theme : Modern Dark",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        body {\n            --background: #212529;\n            /*--background: #53a399;*/\n            --on-background: white;\n            /*--surface: #2d3136;*/\n            /*--surface: #a3535a;*/\n            --surface: #0B504F;\n            --on-surface: white;\n            --primary: var(--nr-dashboard-widgetColor);\n            --on-primary: white;\n            --secondary: var(--nr-dashboard-groupTextColor);\n            --accent: red;\n            --radius-s: 8px;\n            --font-weight-m: 300;\n            --font-weight-m: 500;\n            --font-weight-l: 700;\n            --space-s: 8px;\n            --space-m: 16px;\n            --space-l: 32px;\n        }\n        #TacMesh_Node_cards > md-card > button{\n            font-size:26px;\n        }\n        \n        body.nr-dashboard-theme {\n            background-color: var(--background);\n            font-family: 'Montserrat', sans-serif;\n        }\n        .nr-dashboard-theme ui-card-panel {\n            background-color: var(--background);\n            border: 0;\n        }\n        .nr-dashboard-theme .nr-dashboard-button .md-button {\n            background-color: var(--primary);\n            border-radius: var(--radius-s);\n            padding: 8px !important;\n            line-height: inherit;\n            font-weight: var(--font-weight-l);\n            color: var(--on-primary);\n        }\n        .nr-dashboard-theme [ui-card-size=\"2x2\"].nr-dashboard-button .md-button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            white-space: pre-line;\n        }\n        \n        .nr-dashboard-theme .nr-dashboard-button .md-button ui-icon {\n                margin-bottom: 8px;\n        }\n        .nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n            background-color: var(--secondary);\n        }\n        body.nr-dashboard-theme md-content md-card {\n            background-color: var(--surface);\n        }\n        md-card.md-default-theme, md-card {\n            border-radius: var(--radius-s);\n        }\n        .nr-dashboard-theme .nr-dashboard-gauge-titlel {\n            font-weight: var(--font-weight-l) !important;      \n        }\n        .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n            font-weight: var(--font-weight-l);  \n            text-transform: capitalize;\n            color: var(--on-background);\n        }\n        .nr-dashboard-cardpanel > p {\n            margin-left: 0;\n            padding-left: 16px;\n        }\n        body.nr-dashboard-theme md-toolbar {\n            background-color: var(--surface);\n        }\n        .md-default-theme .md-datepicker-calendar, .md-datepicker-calendar,\n        .md-default-theme .md-calendar, .md-calendar{\n            background-color: var(--surface);\n            color: var(--on-surface);\n        }\n        .md-default-theme .md-datepicker-calendar-pane, .md-datepicker-calendar-pane{\n            border: 0;\n        }\n        .md-default-theme .md-calendar-month-label md-icon, .md-calendar-month-label md-icon, .md-default-theme .md-datepicker-input, .md-datepicker-input {\n            color: var(--on-surface);\n        }\n        body.nr-dashboard-theme md-content md-card {\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-numeric .value {\n            background-color: var(--surface);\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value, .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value.md-select-placeholder {\n            color: var(--on-surface);\n            border-color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-dropdown .md-select-icon {\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-date-picker md-input-container .md-input {\n            color: var(--on-surface);\n            border-color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-date-picker .md-datepicker-triangle-button .md-datepicker-expand-triangle {\n            border-top-color: var(--on-surface);\n        }\n        body.nr-dashboard-theme md-sidenav {\n            background-color: var(--surface);\n        }\n        md-list-item._md-button-wrap > div.md-button:first-child, md-list-item .md-list-item-inner {\n            background-color: var(--surface);\n        }\n    </style>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 160,
        "y": 600,
        "wires": [
            []
        ],
        "icon": "node-red-dashboard/ui_colour_picker.png",
        "info": "# Modern Dark Theme for node-red-dashboard\n\nInspired by Victor Lucachi with his [Node Red Dashboard Concept](https://dribbble.com/shots/10356530-Node-Red-Dashboard-Concept) on Dribbble. Thank you for your work.\n\n## Customize\n\n1. Go on dashboard customisation tab (At the right of Debug Console).\n2. Select the style `Dark`.\n3. Pick the color you want. Example `#66B5F8`\n\n## Buttons\n\nUse `2x2` size for buttons with icon and text on the screenshot"
    },
    {
        "id": "28d8b9e9bd677ebb",
        "type": "ui_template",
        "z": "7c125f5ff4831fc9",
        "group": "8007d2a3a1631677",
        "name": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<script src=\"https://code.iconify.design/2/2.2.1/iconify.min.js\"></script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 80,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "0b4a10a326283278",
        "type": "inject",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"timers\":[{\"starttime\":1666929600000,\"days\":[1,1,1,1,1,1,1],\"output\":\"0\",\"endtime\":1666933200000}],\"settings\":{}}",
        "payloadType": "str",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "24025c0b8a940909",
                "8d2e2235b80ee013"
            ]
        ]
    },
    {
        "id": "7674371f1420dc62",
        "type": "subflow:5f1ba7d06cd6b121",
        "z": "7c125f5ff4831fc9",
        "name": "Node 1",
        "x": 890,
        "y": 40,
        "wires": [
            [],
            [
                "7a787720068bc90e"
            ],
            [
                "5477936a9fb5c209"
            ]
        ]
    },
    {
        "id": "f3ec1d13296bea62",
        "type": "mqtt in",
        "z": "7c125f5ff4831fc9",
        "name": "tacmesh/battery",
        "topic": "tacmesh/battery",
        "qos": "2",
        "datatype": "auto",
        "broker": "4d298a557d0f7d05",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 700,
        "y": 40,
        "wires": [
            [
                "7674371f1420dc62"
            ]
        ]
    },
    {
        "id": "7a787720068bc90e",
        "type": "debug",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 40,
        "wires": []
    },
    {
        "id": "5477936a9fb5c209",
        "type": "debug",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 80,
        "wires": []
    },
    {
        "id": "96c7aa65f5b6f4b1",
        "type": "ui_dropdown",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "label": "Sleep Interval",
        "tooltip": "Select Interval",
        "place": "Select option",
        "group": "8ed9768f2af8c1fd",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1 Minute",
                "value": "1",
                "type": "str"
            },
            {
                "label": "3 Minute",
                "value": "3",
                "type": "str"
            },
            {
                "label": "5 Minute",
                "value": "5",
                "type": "str"
            },
            {
                "label": "10 Minute",
                "value": "10",
                "type": "str"
            },
            {
                "label": "15 Minute",
                "value": "15",
                "type": "str"
            },
            {
                "label": "20 Minute",
                "value": "20",
                "type": "str"
            },
            {
                "label": "30 Minute",
                "value": "30",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "8d5e721220d2c5a1"
            ]
        ]
    },
    {
        "id": "8d5e721220d2c5a1",
        "type": "function",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "func": "flow.set(\"sleepinterval\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 80,
        "wires": [
            [
                "4051d8da5a577133",
                "60c365d4793c8046"
            ]
        ]
    },
    {
        "id": "4051d8da5a577133",
        "type": "debug",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 80,
        "wires": []
    },
    {
        "id": "56a4abe1633f4154",
        "type": "inject",
        "z": "7c125f5ff4831fc9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "8d5e721220d2c5a1"
            ]
        ]
    },
    {
        "id": "ba0eba10c354f9a6",
        "type": "subflow:24dc22ca0c92ec0a",
        "z": "7c125f5ff4831fc9",
        "name": "Node 3",
        "x": 890,
        "y": 140,
        "wires": []
    },
    {
        "id": "46bac27aa460bd2b",
        "type": "subflow:5e304daf39eec074",
        "z": "7c125f5ff4831fc9",
        "name": "Node 4",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "84067e45826d5e27",
        "type": "subflow:d4d66e4cfdfd3b8c",
        "z": "7c125f5ff4831fc9",
        "name": "Node 2",
        "x": 900,
        "y": 100,
        "wires": []
    },
    {
        "id": "2f378337c43f0dba",
        "type": "subflow:cf3b2373529d6dcb",
        "z": "7c125f5ff4831fc9",
        "name": "Node 5",
        "x": 890,
        "y": 220,
        "wires": []
    },
    {
        "id": "9990ca325ff71085",
        "type": "subflow:1daf2959585bda76",
        "z": "7c125f5ff4831fc9",
        "name": "Node 6",
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "de485c9395977ab9",
        "type": "subflow:e8533a8d7456ba12",
        "z": "7c125f5ff4831fc9",
        "name": "Node 7",
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "f26ae53f478d4dca",
        "type": "subflow:de572c5bbb22ac12",
        "z": "7c125f5ff4831fc9",
        "name": "Node 8",
        "x": 890,
        "y": 340,
        "wires": []
    },
    {
        "id": "d7be9de6a9207e55",
        "type": "subflow:9f10e235415e4162",
        "z": "7c125f5ff4831fc9",
        "name": "Node 10",
        "x": 900,
        "y": 420,
        "wires": []
    },
    {
        "id": "0c81d53ce1f8dccb",
        "type": "subflow:92ecd57e6257a18f",
        "z": "7c125f5ff4831fc9",
        "name": "Node 9",
        "x": 890,
        "y": 380,
        "wires": []
    },
    {
        "id": "8ed9768f2af8c1fd",
        "type": "ui_group",
        "name": "Default",
        "tab": "7dfc3c702e35fbbc",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4d298a557d0f7d05",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8007d2a3a1631677",
        "type": "ui_group",
        "name": "Temperature & Humidity",
        "tab": "65dee57ed9168e61",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "65dee57ed9168e61",
        "type": "ui_tab",
        "name": "LivingRoom",
        "icon": "iconify-iconoir:two-seater-sofa",
        "order": 4,
        "disabled": false,
        "hidden": false
    }
]
